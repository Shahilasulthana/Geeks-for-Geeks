/* A binary tree node class
class Node
{
    int data;
    Node left,right;

    Node(int d)
    {
        data = d;
        left = right = null;
    }
} */

class Solution {
    public boolean isBalanced(Node root) {
        return checkBalance(root) != -1;
    }
    
    private int checkBalance(Node node){
        if (node == null){
            return 0;
        }
        
        int leftheight = checkBalance(node.left);
        int rightheight = checkBalance(node.right);
        
        if(leftheight == -1 || rightheight == -1 || Math.abs(leftheight - rightheight) > 1){
            return -1;
        }
        
        return Math.max(leftheight, rightheight) + 1;
    }
}

// here we are using a helper function check for the balance of the binary tree and if it is 
// -1 then it is not a balanced tree else it is balanced tree 
